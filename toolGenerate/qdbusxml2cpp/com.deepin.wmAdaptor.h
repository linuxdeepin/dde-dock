/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-dock/frame/dbusinterface/xml/com.deepin.wm.xml -a ./dde-dock/toolGenerate/qdbusxml2cpp/com.deepin.wmAdaptor -i ./dde-dock/toolGenerate/qdbusxml2cpp/com.deepin.wm.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef COM_DEEPIN_WMADAPTOR_H
#define COM_DEEPIN_WMADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-dock/toolGenerate/qdbusxml2cpp/com.deepin.wm.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface com.deepin.wm
 */
class WmAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "com.deepin.wm")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"com.deepin.wm\">\n"
"    <property access=\"readwrite\" type=\"b\" name=\"compositingEnabled\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"compositingPossible\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"compositingAllowSwitch\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"zoneEnabled\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"cursorTheme\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"cursorSize\"/>\n"
"    <method name=\"SwitchApplication\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"backward\"/>\n"
"    </method>\n"
"    <method name=\"TileActiveWindow\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"side\"/>\n"
"    </method>\n"
"    <method name=\"BeginToMoveActiveWindow\"/>\n"
"    <method name=\"ToggleActiveWindowMaximize\"/>\n"
"    <method name=\"MinimizeActiveWindow\"/>\n"
"    <method name=\"ShowWorkspace\"/>\n"
"    <method name=\"ShowWindow\"/>\n"
"    <method name=\"ShowAllWindow\"/>\n"
"    <method name=\"PerformAction\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"PreviewWindow\">\n"
"      <arg direction=\"in\" type=\"u\" name=\"xid\"/>\n"
"    </method>\n"
"    <method name=\"CancelPreviewWindow\"/>\n"
"    <method name=\"GetCurrentWorkspaceBackground\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"SetCurrentWorkspaceBackground\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"    </method>\n"
"    <method name=\"GetWorkspaceBackground\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"SetWorkspaceBackground\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"    </method>\n"
"    <method name=\"SetTransientBackground\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"GetCurrentWorkspaceBackgroundForMonitor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"strMonitorName\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"SetCurrentWorkspaceBackgroundForMonitor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"strMonitorName\"/>\n"
"    </method>\n"
"    <method name=\"GetWorkspaceBackgroundForMonitor\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"strMonitorName\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"SetWorkspaceBackgroundForMonitor\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"strMonitorName\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"    </method>\n"
"    <method name=\"SetTransientBackgroundForMonitor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"strMonitorName\"/>\n"
"    </method>\n"
"    <method name=\"GetCurrentWorkspace\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"index\"/>\n"
"    </method>\n"
"    <method name=\"WorkspaceCount\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"count\"/>\n"
"    </method>\n"
"    <method name=\"SetCurrentWorkspace\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"index\"/>\n"
"    </method>\n"
"    <method name=\"PreviousWorkspace\"/>\n"
"    <method name=\"NextWorkspace\"/>\n"
"    <method name=\"GetAllAccels\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"GetAccel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"out\" type=\"as\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"GetDefaultAccel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"out\" type=\"as\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"SetAccel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"data\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"result\"/>\n"
"    </method>\n"
"    <method name=\"RemoveAccel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"SetDecorationTheme\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"themeType\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"themeName\"/>\n"
"    </method>\n"
"    <method name=\"SetDecorationDeepinTheme\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"deepinThemeName\"/>\n"
"    </method>\n"
"    <signal name=\"WorkspaceBackgroundChanged\">\n"
"      <arg type=\"i\" name=\"index\"/>\n"
"      <arg type=\"s\" name=\"newUri\"/>\n"
"    </signal>\n"
"    <signal name=\"WorkspaceBackgroundChangedForMonitor\">\n"
"      <arg type=\"i\" name=\"index\"/>\n"
"      <arg type=\"s\" name=\"strMonitorName\"/>\n"
"      <arg type=\"s\" name=\"uri\"/>\n"
"    </signal>\n"
"    <signal name=\"compositingEnabledChanged\">\n"
"      <arg type=\"b\" name=\"enabled\"/>\n"
"    </signal>\n"
"    <signal name=\"wmCompositingEnabledChanged\">\n"
"      <arg type=\"b\" name=\"enabled\"/>\n"
"    </signal>\n"
"    <signal name=\"workspaceCountChanged\">\n"
"      <arg type=\"i\" name=\"count\"/>\n"
"    </signal>\n"
"    <signal name=\"BeginToMoveActiveWindowChanged\"/>\n"
"    <signal name=\"SwitchApplicationChanged\">\n"
"      <arg type=\"b\" name=\"backward\"/>\n"
"    </signal>\n"
"    <signal name=\"TileActiveWindowChanged\">\n"
"      <arg type=\"i\" name=\"side\"/>\n"
"    </signal>\n"
"    <signal name=\"ToggleActiveWindowMaximizeChanged\"/>\n"
"    <signal name=\"ShowAllWindowChanged\"/>\n"
"    <signal name=\"ShowWindowChanged\"/>\n"
"    <signal name=\"ShowWorkspaceChanged\"/>\n"
"    <signal name=\"ResumeCompositorChanged\">\n"
"      <arg type=\"i\" name=\"reason\"/>\n"
"    </signal>\n"
"    <signal name=\"SuspendCompositorChanged\">\n"
"      <arg type=\"i\" name=\"reason\"/>\n"
"    </signal>\n"
"    <method name=\"ChangeCurrentWorkspaceBackground\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"uri\"/>\n"
"    </method>\n"
"    <method name=\"SwitchToWorkspace\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"backward\"/>\n"
"    </method>\n"
"    <method name=\"PresentWindows\">\n"
"      <arg direction=\"in\" type=\"au\" name=\"xids\"/>\n"
"      <annotation value=\"QList&lt;uint&gt;\" name=\"org.qtproject.QtDBus.QtTypeName.In0\"/>\n"
"    </method>\n"
"    <method name=\"EnableZoneDetected\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <signal name=\"WorkspaceSwitched\">\n"
"      <arg type=\"i\" name=\"from\"/>\n"
"      <arg type=\"i\" name=\"to\"/>\n"
"    </signal>\n"
"    <method name=\"GetMultiTaskingStatus\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"isActive\"/>\n"
"    </method>\n"
"    <method name=\"SetMultiTaskingStatus\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"isActive\"/>\n"
"    </method>\n"
"    <method name=\"GetIsShowDesktop\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"isShowDesktop\"/>\n"
"    </method>\n"
"    <method name=\"SetShowDesktop\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"isShowDesktop\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    WmAdaptor(QObject *parent);
    virtual ~WmAdaptor();

public: // PROPERTIES
    Q_PROPERTY(bool compositingAllowSwitch READ compositingAllowSwitch)
    bool compositingAllowSwitch() const;

    Q_PROPERTY(bool compositingEnabled READ compositingEnabled WRITE setCompositingEnabled)
    bool compositingEnabled() const;
    void setCompositingEnabled(bool value);

    Q_PROPERTY(bool compositingPossible READ compositingPossible)
    bool compositingPossible() const;

    Q_PROPERTY(int cursorSize READ cursorSize WRITE setCursorSize)
    int cursorSize() const;
    void setCursorSize(int value);

    Q_PROPERTY(QString cursorTheme READ cursorTheme WRITE setCursorTheme)
    QString cursorTheme() const;
    void setCursorTheme(const QString &value);

    Q_PROPERTY(bool zoneEnabled READ zoneEnabled WRITE setZoneEnabled)
    bool zoneEnabled() const;
    void setZoneEnabled(bool value);

public Q_SLOTS: // METHODS
    void BeginToMoveActiveWindow();
    void CancelPreviewWindow();
    void ChangeCurrentWorkspaceBackground(const QString &uri);
    void EnableZoneDetected(bool enabled);
    QStringList GetAccel(const QString &id);
    QString GetAllAccels();
    int GetCurrentWorkspace();
    QString GetCurrentWorkspaceBackground();
    QString GetCurrentWorkspaceBackgroundForMonitor(const QString &strMonitorName);
    QStringList GetDefaultAccel(const QString &id);
    bool GetIsShowDesktop();
    bool GetMultiTaskingStatus();
    QString GetWorkspaceBackground(int index);
    QString GetWorkspaceBackgroundForMonitor(int index, const QString &strMonitorName);
    void MinimizeActiveWindow();
    void NextWorkspace();
    void PerformAction(int type);
    void PresentWindows(const QList<uint> &xids);
    void PreviewWindow(uint xid);
    void PreviousWorkspace();
    void RemoveAccel(const QString &id);
    bool SetAccel(const QString &data);
    void SetCurrentWorkspace(int index);
    void SetCurrentWorkspaceBackground(const QString &uri);
    void SetCurrentWorkspaceBackgroundForMonitor(const QString &uri, const QString &strMonitorName);
    void SetDecorationDeepinTheme(const QString &deepinThemeName);
    void SetDecorationTheme(const QString &themeType, const QString &themeName);
    void SetMultiTaskingStatus(bool isActive);
    void SetShowDesktop(bool isShowDesktop);
    void SetTransientBackground(const QString &in0);
    void SetTransientBackgroundForMonitor(const QString &uri, const QString &strMonitorName);
    void SetWorkspaceBackground(int index, const QString &uri);
    void SetWorkspaceBackgroundForMonitor(int index, const QString &strMonitorName, const QString &uri);
    void ShowAllWindow();
    void ShowWindow();
    void ShowWorkspace();
    void SwitchApplication(bool backward);
    void SwitchToWorkspace(bool backward);
    void TileActiveWindow(uint side);
    void ToggleActiveWindowMaximize();
    int WorkspaceCount();
Q_SIGNALS: // SIGNALS
    void BeginToMoveActiveWindowChanged();
    void ResumeCompositorChanged(int reason);
    void ShowAllWindowChanged();
    void ShowWindowChanged();
    void ShowWorkspaceChanged();
    void SuspendCompositorChanged(int reason);
    void SwitchApplicationChanged(bool backward);
    void TileActiveWindowChanged(int side);
    void ToggleActiveWindowMaximizeChanged();
    void WorkspaceBackgroundChanged(int index, const QString &newUri);
    void WorkspaceBackgroundChangedForMonitor(int index, const QString &strMonitorName, const QString &uri);
    void WorkspaceSwitched(int from, int to);
    void compositingEnabledChanged(bool enabled);
    void wmCompositingEnabledChanged(bool enabled);
    void workspaceCountChanged(int count);
};

#endif
