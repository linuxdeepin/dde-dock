/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./dde-dock/frame/dbusinterface/xml/org.deepin.dde.Appearance1.xml -a ./dde-dock/toolGenerate/qdbusxml2cpp/org.deepin.dde.Appearance1Adaptor -i ./dde-dock/toolGenerate/qdbusxml2cpp/org.deepin.dde.Appearance1.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ORG_DEEPIN_DDE_APPEARANCE1ADAPTOR_H
#define ORG_DEEPIN_DDE_APPEARANCE1ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "./dde-dock/toolGenerate/qdbusxml2cpp/org.deepin.dde.Appearance1.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.deepin.dde.Appearance1
 */
class Appearance1Adaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.deepin.dde.Appearance1")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.deepin.dde.Appearance1\">\n"
"    <property access=\"readwrite\" type=\"d\" name=\"FontSize\"/>\n"
"    <property access=\"readwrite\" type=\"d\" name=\"Opacity\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"WindowRadius\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Background\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"GlobalTheme\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"GtkTheme\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"IconTheme\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"CursorTheme\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"MonospaceFont\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"QtActiveColor\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"StandardFont\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"WallpaperSlideShow\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"WallpaperURls\"/>\n"
"    <signal name=\"Changed\">\n"
"      <arg type=\"s\" name=\"ty\"/>\n"
"      <arg type=\"s\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"Refreshed\">\n"
"      <arg type=\"s\" name=\"type\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    Appearance1Adaptor(QObject *parent);
    virtual ~Appearance1Adaptor();

public: // PROPERTIES
    Q_PROPERTY(QString Background READ background)
    QString background() const;

    Q_PROPERTY(QString CursorTheme READ cursorTheme)
    QString cursorTheme() const;

    Q_PROPERTY(double FontSize READ fontSize WRITE setFontSize)
    double fontSize() const;
    void setFontSize(double value);

    Q_PROPERTY(QString GlobalTheme READ globalTheme)
    QString globalTheme() const;

    Q_PROPERTY(QString GtkTheme READ gtkTheme)
    QString gtkTheme() const;

    Q_PROPERTY(QString IconTheme READ iconTheme)
    QString iconTheme() const;

    Q_PROPERTY(QString MonospaceFont READ monospaceFont)
    QString monospaceFont() const;

    Q_PROPERTY(double Opacity READ opacity WRITE setOpacity)
    double opacity() const;
    void setOpacity(double value);

    Q_PROPERTY(QString QtActiveColor READ qtActiveColor WRITE setQtActiveColor)
    QString qtActiveColor() const;
    void setQtActiveColor(const QString &value);

    Q_PROPERTY(QString StandardFont READ standardFont)
    QString standardFont() const;

    Q_PROPERTY(QString WallpaperSlideShow READ wallpaperSlideShow WRITE setWallpaperSlideShow)
    QString wallpaperSlideShow() const;
    void setWallpaperSlideShow(const QString &value);

    Q_PROPERTY(QString WallpaperURls READ wallpaperURls)
    QString wallpaperURls() const;

    Q_PROPERTY(int WindowRadius READ windowRadius WRITE setWindowRadius)
    int windowRadius() const;
    void setWindowRadius(int value);

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void Changed(const QString &ty, const QString &value);
    void Refreshed(const QString &type);
};

#endif
